{"version":3,"sources":["anti:gagarin/meteor/settings.js","anti:gagarin/meteor/gagarin.js","anti:gagarin/meteor/backdoor.js","anti:gagarin/meteor/createUser.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;AACA,e;;AAEA,+D;AACA,O;AACA,uE;AACA,iB;AACA,oD;AACA,G;AACA,C;;;;;;;;;;;;;;;;;;;;ACRA,0D;;AAEA,mE;AACA,4C;AACA,Q;AACA,e;AACA,C;;AAEA,8B;;AAEA,uB;AACA,8B;AACA,C;;;;;;;;;;;;;;;;;;;;ACZA,2B;AACA,kC;AACA,0C;;AAEA,uB;;AAEA,qF;AACA,uE;;AAEA,kB;;AAEA,wD;AACA,mB;;AAEA,wB;;AAEA,0B;AACA,yB;AACA,6B;;AAEA,6C;AACA,4B;AACA,W;AACA,mF;AACA,qB;AACA,yC;AACA,O;AACA,gD;AACA,qB;AACA,a;AACA,gE;AACA,uB;AACA,4C;AACA,S;AACA,wB;AACA,O;AACA,M;;AAEA,wD;AACA,mB;;AAEA,wB;;AAEA,0B;AACA,yB;AACA,6B;;AAEA,gC;AACA,6C;;AAEA,4B;;AAEA,sB;;AAEA,0D;AACA,2C;AACA,mB;;AAEA,iC;;AAEA,8L;AACA,8L;;AAEA,kB;AACA,+D;AACA,0B;AACA,4C;AACA,uB;AACA,wC;AACA,iD;AACA,8D;AACA,qB;AACA,kB;AACA,iB;AACA,e;AACA,kB;AACA,8B;AACA,wC;AACA,0B;AACA,8C;AACA,qC;AACA,2C;AACA,kB;AACA,c;AACA,W;AACA,Q;;AAEA,uC;;AAEA,W;AACA,iE;AACA,qB;AACA,oC;AACA,O;;AAEA,gD;AACA,a;AACA,yE;AACA,uE;AACA,sD;AACA,a;AACA,uC;AACA,c;AACA,uB;AACA,sC;AACA,S;AACA,6B;AACA,O;AACA,M;;AAEA,uE;AACA,mB;;AAEA,wB;;AAEA,6B;AACA,6B;AACA,0B;AACA,yB;AACA,6B;;AAEA,iC;AACA,0B;AACA,yB;AACA,yB;AACA,6C;;AAEA,4B;;AAEA,mC;AACA,mD;AACA,mB;AACA,iB;AACA,S;AACA,oB;AACA,gC;AACA,qC;AACA,S;AACA,mE;AACA,kD;AACA,S;AACA,mC;AACA,mC;AACA,8B;AACA,8B;AACA,O;;AAEA,W;AACA,mF;AACA,qB;AACA,gC;AACA,O;;AAEA,yD;;AAEA,6E;AACA,iD;AACA,Q;AACA,0C;AACA,mH;AACA,oB;;AAEA,0B;AACA,uB;AACA,e;AACA,kE;;AAEA,mD;AACA,gC;AACA,a;AACA,Y;AACA,6F;AACA,Y;AACA,mC;AACA,yC;AACA,a;;AAEA,yB;AACA,oC;AACA,W;AACA,a;;AAEA,c;AACA,uD;AACA,O;;AAEA,2B;AACA,M;;AAEA,K;;AAEA,8B;AACA,iF;AACA,K;;AAEA,C;;AAEA,G;AACA,iE;AACA,uD;AACA,E;AACA,uB;AACA,sB;AACA,0B;AACA,G;AACA,8C;AACA,e;;AAEA,kB;;AAEA,c;AACA,2D;AACA,qB;AACA,I;;AAEA,c;AACA,c;AACA,iC;AACA,qB;AACA,wB;AACA,I;;AAEA,+C;AACA,kE;AACA,K;;AAEA,c;AACA,iB;AACA,wB;AACA,e;AACA,uE;AACA,wB;AACA,mB;AACA,sB;AACA,I;;AAEA,+C;AACA,gE;AACA,K;;AAEA,c;AACA,e;AACA,+B;AACA,a;AACA,U;AACA,O;AACA,I;;AAEA,2B;AACA,C;;AAEA,G;AACA,2C;AACA,wC;AACA,E;AACA,kB;AACA,G;AACA,yB;AACA,e;;AAEA,uD;AACA,uB;AACA,K;AACA,6B;AACA,wE;AACA,G;AACA,gB;AACA,C;;AAEA,G;AACA,wC;AACA,E;AACA,+C;AACA,8C;AACA,E;AACA,wB;AACA,G;AACA,2B;AACA,e;;AAEA,oC;AACA,4B;AACA,G;AACA,mE;AACA,C;;;;;;;;;;;;;;;;;;;;;AC5RA,6C;;AAEA,4B;;AAEA,0B;AACA,W;AACA,G;;AAEA,4B;AACA,G;;AAEA,4B;;AAEA,0B;AACA,W;AACA,G;;AAEA,4B;AACA,G;;AAEA,qC;;AAEA,oB;;AAEA,sC;AACA,W;AACA,G;;AAEA,iD;AACA,W;AACA,G;;AAEA,uD;;AAEA,gC;AACA,iC;AACA,iC;AACA,K;;AAEA,8C;AACA,kB;AACA,M;;AAEA,C","file":"/packages/anti:gagarin.js","sourcesContent":["\n// server only!\n\nif (!Meteor.settings.gagarin && process.env.GAGARIN_SETTINGS) {\n  try {\n    Meteor.settings.gagarin = JSON.parse(process.env.GAGARIN_SETTINGS);\n  } catch (err) {\n    console.warn('invalid Gagarin settings\\n', err);\n  }\n}\n","\nvar settings = Meteor.settings && Meteor.settings.gagarin;\n\nif (Package['anti:gagarin']) { // it might get created by a fixture\n  Gagarin = Package['anti:gagarin'].Gagarin;\n} else {\n  Gagarin = {};\n}\n\nGagarin.isActive = !!settings;\n\nif (Gagarin.isActive) {\n  Gagarin.settings = settings;\n}\n","\nvar vm = Npm.require('vm');\nvar Fiber = Npm.require('fibers');\nvar Future = Npm.require('fibers/future');\n\nif (Gagarin.isActive) {\n\n  // TODO: also protect these methods with some authentication (user/password/token?)\n  //       note that required data my be provided with GAGARIN_SETTINGS\n\n  Meteor.methods({\n\n    '/gagarin/execute': function (closure, code, args) {\n      \"use strict\";\n\n      args = args || [];\n\n      check(code, String);\n      check(args, Array);\n      check(closure, Object);\n\n      var context = vm.createContext(global);\n      context.Fiber = Fiber;\n      try {\n        vm.runInContext(\"value = \" + wrapSourceCode(code, args, closure), context);\n      } catch (err) {\n        throw new Meteor.Error(400, err);\n      }\n      if (typeof context.value === 'function') {\n        var feedback;\n        try {\n          feedback = context.value.apply(null, values(closure));\n        } catch (err) {\n          feedback = { error: err.message };\n        }\n        return feedback;\n      }\n    },\n\n    '/gagarin/promise': function (closure, code, args) {\n      \"use strict\";\n\n      args = args || [];\n\n      check(code, String);\n      check(args, Array);\n      check(closure, Object);\n\n      var future = new Future();\n      var context = vm.createContext(global);\n\n      context.Fiber = Fiber;\n\n      var chunks = [];\n\n      var keys = Object.keys(closure).map(function (key) {\n        return stringify(key) + \": \" + key;\n      }).join(',');\n\n      args = args.map(stringify);\n\n      args.unshift(\"(function (cb) {\\n    return function ($) {\\n      setTimeout(function () { cb({ error : $, closure: {\" + keys + \"}}); });\\n    };\\n  })(arguments[arguments.length-1])\");\n      args.unshift(\"(function (cb) {\\n    return function ($) {\\n      setTimeout(function () { cb({ value : $, closure: {\" + keys + \"}}); });\\n    };\\n  })(arguments[arguments.length-1])\");\n\n      chunks.push(\n        \"function (\" + Object.keys(closure).join(', ') + \") {\",\n        \"  'use strict';\",\n        \"  var either = function (first) {\",\n        \"    return {\",\n        \"      or: function (second) {\",\n        \"        return function (arg1, arg2) {\",\n        \"          return arg1 ? first(arg1) : second(arg2);\",\n        \"        };\",\n        \"      }\",\n        \"    };\",\n        \"  };\",\n        \"  try {\",\n        \"    (\" + code + \")(\",\n        \"    \" + args.join(', ') + \");\",\n        \"  } catch ($) {\",\n        \"    arguments[arguments.length-1]({\",\n        \"      error   : $.message,\",\n        \"      closure : { \" + keys + \" }\",\n        \"    });\",\n        \"  }\",\n        \"}\"\n      );\n\n      //console.log(chunks.join('\\n'));\n\n      try {\n        vm.runInContext(\"value = \" + chunks.join('\\n'), context);\n      } catch (err) {\n        throw new Meteor.Error(err);\n      }\n\n      if (typeof context.value === 'function') {\n        try {\n          context.value.apply(null, values(closure, function (feedback) {\n            if (feedback.error && typeof feedback.error === 'object') {\n              feedback.error = feedback.error.message;\n            }\n            future['return'](feedback);\n          }));\n        } catch (err) {\n          throw new Meteor.Error(err);\n        }\n        return future.wait();\n      }\n    },\n\n    '/gagarin/wait': function (closure, timeout, message, code, args) {\n      \"use strict\";\n\n      args = args || [];\n\n      check(timeout, Number);\n      check(message, String);\n      check(code, String);\n      check(args, Array);\n      check(closure, Object);\n\n      var future  = new Future();\n      var done    = false;\n      var handle1 = null;\n      var handle2 = null;\n      var context = vm.createContext(global);\n\n      context.Fiber = Fiber;\n\n      function resolve (feedback) {\n        // TODO: can we do away with this sentinel?\n        if (done) {\n          return;\n        }\n        done = true;\n        if (!feedback.closure) {\n          feedback.closure = closure;\n        }\n        if (feedback.error && typeof feedback.error === 'object') {\n          feedback.error = feedback.error.message;\n        }\n        future['return'](feedback);\n        //-------------------------\n        clearTimeout(handle1);\n        clearTimeout(handle2);\n      }\n\n      try {\n        vm.runInContext(\"value = \" + wrapSourceCode(code, args, closure), context);\n      } catch (err) {\n        resolve({ error: err });\n      }\n\n      if (!done && typeof context.value === 'function') {\n\n        // XXX this should be defined prior to the fist call to test, because\n        //     the latter can return immediatelly\n        \n        handle2 = setTimeout(function () {\n          resolve({ error: 'I have been waiting for ' + timeout + ' ms ' + message + ', but it did not happen.' });\n        }, timeout);\n\n        (function test() {\n          var feedback;\n          try {\n            feedback = context.value.apply(null, values(closure));\n\n            if (feedback.value || feedback.error) {\n              resolve(feedback);\n            }\n            \n            handle1 = setTimeout(Meteor.bindEnvironment(test), 50); // repeat after 1/20 sec.\n            \n            if (feedback.closure) {\n              closure = feedback.closure;\n            }\n\n          } catch (err) {\n            resolve({ error: err });\n          }\n        }());\n\n      } else {\n        resolve({ error: 'code has to be a function' })\n      }\n\n      return future.wait();\n    },\n\n  });\n\n  Meteor.startup(function () {\n    console.log('Поехали!'); // Let's ride! (Gagarin, during the Vostok 1 launch)\n  });\n\n}\n\n/**\n * Creates a source code of another function, providing the given\n * arguments and injecting the given closure variables.\n *\n * @param {String} code\n * @param {Array} args\n * @param {Object} closure\n */\nfunction wrapSourceCode(code, args, closure) {\n  \"use strict\";\n\n  var chunks = [];\n\n  chunks.push(\n    \"function (\" + Object.keys(closure).join(', ') + \") {\",\n    \"  'use strict';\"\n  );\n\n  chunks.push(\n    \"  try {\",\n    \"    return (function ($) {\",\n    \"      return {\",\n    \"        closure: {\"\n  );\n\n  Object.keys(closure).forEach(function (key) {\n    chunks.push(\"          \" + stringify(key) + \": \" + key + \",\");\n  });\n\n  chunks.push(\n    \"        },\",\n    \"        value: $,\",\n    \"      };\",\n    \"    })( (\" + code + \")(\" + args.map(stringify).join(',') + \") );\",\n    \"  } catch (err) {\",\n    \"    return {\",\n    \"      closure: {\"\n  );\n\n  Object.keys(closure).forEach(function (key) {\n    chunks.push(\"        \" + stringify(key) + \": \" + key + \",\");\n  });\n\n  chunks.push(\n    \"      },\",\n    \"      error: err.message\",\n    \"    };\",\n    \"  }\",\n    \"}\"\n  );\n\n  return chunks.join('\\n');\n}\n\n/**\n * Returns all values of the object, sorted\n * alphabetically by corresponding keys.\n *\n * @param {Object}\n */\nfunction values(object) {\n  \"use strict\";\n\n  var values = Object.keys(object).map(function (key) {\n    return object[key];\n  });\n  if (arguments.length > 1) {\n    values.push.apply(values, Array.prototype.slice.call(arguments, 1));\n  }\n  return values;\n}\n\n/**\n * A thin wrapper around JSON.stringify:\n *\n *  - `undefined` gets evaluated to \"undefined\"\n *  - a function gets evaluated to source code\n *\n * @param {Object} value\n */\nfunction stringify(value) {\n  \"use strict\";\n\n  if (typeof value === 'function') {\n    return value.toString();\n  }\n  return value !== undefined ? JSON.stringify(value) : \"undefined\";\n}\n\n","\nvar settings = Meteor.settings.gagarin || {};\n\nMeteor.startup(function () {\n\n  if (!Gagarin.isActive) {\n    return;\n  }\n\n  maybeCreateUser(settings);\n});\n\nMeteor.startup(function () {\n\n  if (!Gagarin.isActive) {\n    return;\n  }\n\n  maybeCreateUser(settings);\n});\n\nfunction maybeCreateUser (settings) {\n\n  var userId = null;\n\n  if (!Package['accounts-password']) {\n    return;\n  }\n\n  if (!settings.username || !settings.password) {\n    return;\n  }\n\n  Meteor.users.remove({ username: settings.username });\n\n  userId = Accounts.createUser({\n    username : settings.username,\n    password : settings.password,\n  });\n\n  Meteor.users.update({_id: userId}, { $set: {\n    gagarin : true\n  }});\n\n}\n"]}